#!/usr/bin/env python3


# Simple language switcher for FreeBSD in PyQt5


# Copyright (c) 2022, Simon Peter <probono@puredarwin.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import os, sys, subprocess, io

try:
    from PyQt5 import QtWidgets, QtGui, QtCore
except:
    eprint("Could not import PyQt5. On FreeBSD, sudo pkg install py3x-qt5-widgets")

# Print to stderr, https://stackoverflow.com/a/14981125
def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)

class LanguageSwitcher(QtWidgets.QMainWindow):

    def __init__(self, app):
        super().__init__()
        self.app = app
        
        self.window = QtWidgets.QMainWindow()
        self.window.setFixedSize(400, 400)

        # Remove window decorations, especially the close button
        self.window.setWindowFlags(QtCore.Qt.CustomizeWindowHint)
        self.window.setWindowFlags(QtCore.Qt.FramelessWindowHint)

        # Move window to center of the screen
        qtRectangle = self.window.frameGeometry()
        centerPoint = QtWidgets.QDesktopWidget().availableGeometry().center()
        qtRectangle.moveCenter(centerPoint)
        self.window.move(qtRectangle.topLeft())

        self.window.setWindowTitle('Language')

        layout = QtWidgets.QVBoxLayout()

        self.list_widget = QtWidgets.QListWidget()
        self.list_widget.setAlternatingRowColors(True)

        # Only show the main ones in order to keep the list short and tidy, let's see how long
        # it takes for the first person to complain that exotic ones are missing...
        # Let's not end up like https://www.youtube.com/watch?v=4nR4HP2x1iU
        supported_languages = ["en",
            "fr",
            "de",
            "es",
            "it",
            "nl",
            "sv",
            "no",
            "da",
            "fi",
            "ru",
            "pl",
            "pt",
            "pt_PT",
            "zh_CN",
            "zh_TW",
            "jp",
            "ko"]
            
        cleartext = ["Use English for the main language",
            "Utiliser le français comme langue principale",
            "Deutsch als Standardsprache verwenden",
            "Usar español como idioma principal",
            "Usa l'italiano come lingua principale",
            "Gebruik Nederlands als hoofdtaal",
            "Använd svenska som huvudspråk",
            "Bruk norsk som hovedspråk",
            "Brug dansk som hovedsprog",
            "Käytä pääkielenä suomea",
            "Выбрать pусский как главный язык",
            "Użyj polskiego jako języka głównego",
            "Usar português do Brasil como idioma principal",
            "Usar o português europeu como idioma principal",
            "以简体中文作为主语言",
            "以繁體中文作為主要語言",
            "主に日本語を使用する",
            "주 언어로 한글 사용"]
        i = 0
        selected_index = -1
        for supported_language in supported_languages:
            item = QtWidgets.QListWidgetItem(cleartext[i])
            i = i+1
            setattr(item, "language", supported_language)
            eprint("%s = %s" % (cleartext[i-1], supported_language))
            self.list_widget.addItem(item)
        if selected_index > -1:
            eprint("selected_index, %i" % selected_index)
            self.list_widget.setFocus()

        self.list_widget.itemSelectionChanged.connect(self.onSomethingChanged)
        self.list_widget.setUniformItemSizes(True)
        self.list_widget.setItemAlignment(QtCore.Qt.AlignVCenter)
        layout.addWidget(self.list_widget)

        widget = QtWidgets.QWidget()
        widget.setLayout(layout)
        self.window.setCentralWidget(widget)
        self.window.show()
        app.exec_()

    def onSomethingChanged(self):
        self.list_widget.setEnabled(False)
        selected_language = getattr(self.list_widget.selectedItems()[0], "language")
        print(selected_language)
        exit(0)


if __name__ == "__main__":

    if (("LANG" in os.environ) and (os.getenv("LANG") != "") and (os.getenv("LANG") != "C.UTF-8")):
        eprint("Language is set to:\nLANG=%s." % os.getenv("LANG"))
        exit(1)
    
    ks = LanguageSwitcher(QtWidgets.QApplication(sys.argv))
